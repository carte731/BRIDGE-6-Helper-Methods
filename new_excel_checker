#!/usr/bin/env python3

import os
import sys
import pandas as pd

def fileIso(sub): # Isolates accession numbers from directory file names
    reverse=-1
    inputList={}
    ML={}
    word=""
    for i in sub:
        while(i[reverse] != "_"):
            word+=i[reverse]
            reverse-=1
        word="".join(reversed(word))
        if(word in inputList):
            inputList[word]+=1
            ML[word].append(i + ".fastq")            
        else:
            inputList[word]=1
            ML[word]=[i + ".fastq"]
        # ML[word].append(i + ".fastq")
        # ML[word] += i + ".fastq"
        # ML[i + ".fastq"]=word
        word=""
        reverse=-1
    return(inputList, ML)

def excelIso(found_excel): # Isolates accession numbers from file names
    inputList = pd.read_excel(found_excel)
    excelList = inputList["filename"].tolist()
    newList = []
    [ newList.append(i.strip('.fastq')) for i in excelList ]
    reverse=-1
    inputList={}
    EL={}
    word=""
    for i in newList:
        while(i[reverse] != "_"):
            word+=i[reverse]
            reverse-=1
        word="".join(reversed(word))
        if(word in inputList):
            inputList[word]+=1
            EL[word].append(i + ".fastq")
        else:
            inputList[word]=1
            EL[word]=[i + ".fastq"]
        word=""
        reverse=-1
    return(inputList, EL)

def listCompare(masterList, excel, ML, EL, path):
    counter = 0
    for fileName in masterList:
        if(fileName in excel):
            if(masterList[fileName] != excel[fileName]):
                counter += 1
                print("Number mismatch in found list: " + fileName)
                print(str(ML[fileName]))
                print(str(EL[fileName]) + "\n\n")
        else:
            counter += 1
            print(path + str(ML[fileName]) + " NOT FOUND\n")
    if(counter == 0):
        print("\nNo ERRORS found...\n")


def master_list(path): # Creates listings from directory structures 
    fastqFiles = [ os.path.splitext(f)[0] for f in os.listdir(path) if os.path.isfile(path + f) ]
    return(fastqFiles)

    
def argImports():
    path= sys.argv[1]
    excel = sys.argv[2]
    return(path, excel)

def main(): # Main function
    path, excel = argImports()
    sub = master_list(path)
    masterList, ML = fileIso(sub)
    excelList, EL = excelIso(excel)
    listCompare(masterList, excelList, ML, EL, path)

    print("\nOPERATIONS COMPLETE...\n")


main() # runs main function and imports parameters arguments.